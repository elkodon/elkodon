name: Unit-Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, release* ]

jobs:
  commit_message_format:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Check format of all commit messages
        run: ./scripts/ci_test_commit_msg.sh

#   linux_x64:
#     timeout-minutes: 10
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout sources
#         uses: actions/checkout@v3
# 
#       - name: Install dependencies
#         run: sudo apt-get -y install libacl1-dev
# 
#       - name: Create test users and groups
#         run: |
#           sudo useradd testuser1
#           sudo useradd testuser2
#           sudo groupadd testgroup1
#           sudo groupadd testgroup2
# 
#       - name: Install latest stable
#         uses: actions-rs/toolchain@v1
#         with:
#           profile: minimal
#           toolchain: stable
#           override: true
#           components: rustfmt, clippy
# 
#       - name: Run cargo fmt
#         uses: actions-rs/cargo@v1
#         with:
#           command: fmt
#           args: --all -- --check
# 
#       - name: Run cargo clippy
#         uses: actions-rs/cargo@v1
#         with:
#           command: clippy
#           args: -- -D warnings
# 
#       - name: Run cargo test workspace
#         uses: actions-rs/cargo@v1
#         with:
#           command: test
#           args: --workspace -- --test-threads=1
# 
#   freebsd:
#     timeout-minutes: 20
#     runs-on: macos-12
#     steps:
#       - name: Checkout sources
#         uses: actions/checkout@v3
# 
#       - name: Install FreeBSD
#         id: Test
#         uses: vmactions/freebsd-vm@v0
#         with:
#           usesh: true
#           copyback: false
#           mem: 4096
#           prepare: |
#             pkg install -y git curl bash llvm17
#             pw user add testuser1
#             pw user add testuser2
#             pw group add testgroup1
#             pw group add testgroup2
#             mkdir -p /mnt/mqueue/
#             mount -t mqueuefs null /mnt/mqueue/
#             curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
#             git config --global --add safe.directory /Users/runner/work/elkodon/elkodon
#           run: |
#             ln -sf ~/.cargo/bin/* /usr/bin/
#             cargo fmt --all -- --check
#             cargo clippy -- -D warnings
#             cargo test --workspace -- --test-threads=1
# 
#   windows:
#     timeout-minutes: 10
#     runs-on: windows-latest
#     steps:
#       - name: Checkout sources
#         uses: actions/checkout@v3
# 
#       - name: Install latest stable
#         uses: actions-rs/toolchain@v1
#         with:
#           profile: minimal
#           toolchain: stable
#           override: true
#           components: rustfmt, clippy
# 
#       - name: Run cargo fmt
#         uses: actions-rs/cargo@v1
#         with:
#           command: fmt
#           args: --all -- --check
# 
#       - name: Run cargo clippy
#         uses: actions-rs/cargo@v1
#         with:
#           command: clippy
#           args: -- -D warnings
# 
#       - name: Run cargo build
#         uses: actions-rs/cargo@v1
#         with:
#           command: build
#           args: --workspace
# 
#       - name: Run cargo test subset
#         uses: actions-rs/cargo@v1
#         with:
#           command: test
#           args: --workspace --lib --bins --tests -- --test-threads=1
# 
#   mac_os_no_bb_posix__cal__elkodon:
#     timeout-minutes: 20
#     runs-on: macos-latest
#     steps:
#       - name: Checkout sources
#         uses: actions/checkout@v3
# 
#       - name: Install latest stable
#         uses: actions-rs/toolchain@v1
#         with:
#           profile: minimal
#           toolchain: stable
#           override: true
#           components: rustfmt, clippy
# 
#       - name: Run cargo fmt
#         uses: actions-rs/cargo@v1
#         with:
#           command: fmt
#           args: --all -- --check
# 
#       - name: Run cargo clippy
#         uses: actions-rs/cargo@v1
#         with:
#           command: clippy
#           args: -- -D warnings
# 
#       - name: Run cargo build
#         uses: actions-rs/cargo@v1
#         with:
#           command: build
#           args: --workspace
# 
#       - name: Run cargo test subset
#         uses: actions-rs/cargo@v1
#         with:
#           command: test
#           args: >
#             -p elkodon_pal_concurrency_primitives 
#             -p elkodon_pal_posix
#             -p elkodon_bb_container
#             -p elkodon_bb_elementary
#             -p elkodon_bb_lock_free
#             -p elkodon_bb_log
#             -p elkodon_bb_memory
#             -p elkodon_bb_system_types
#             -p elkodon_bb_testing
#             --lib --bins --tests -- --test-threads=1
